{"version":3,"sources":["webpack:///./src/PostCard.tsx","webpack:///./src/pages/blog.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./src/Header.tsx","webpack:///./src/SidebarContents.tsx","webpack:///./src/TableOfContents.tsx","webpack:///./src/Layout.tsx"],"names":["PostCard","post","title","to","fields","slug","style","color","fontWeight","frontmatter","float","date","excerpt","BlogPage","posts","data","allMdx","edges","filter","edge","node","map","key","id","Layout","pageQuery","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json","shape","siteMetadata","plugins","resolve","options","name","path","__dirname","typeName","short_name","start_url","background_color","theme_color","display","icon","defaultLayouts","extensions","remarkPlugins","gatsbyRemarkPlugins","className","classPrefix","inlineCodeMarker","showLineNumbers","noInlineHighlight","pathPrefix","Header","siteTitle","this","mode","Item","href","target","type","Component","SubMenu","Menu","constructTree","list","tree","dir","forEach","item","parents","push","subtree","i","length","newNode","find","sortTree","sort","a","b","SidebarContents","root","convertToTree","startsWith","currentPath","window","defaultOpenKeys","minWidth","height","borderRight","selectedKeys","loop","activePath","Link","Anchor","filterAnchorDetails","anchors","last_depth","slice","call","anchor","depth","parseInt","parentElement","nodeName","innerText","deleteNode","j","index","splice","TableOfContents","useState","setAnchors","useLayoutEffect","document","getElementsByClassName","margin","Sider","Content","RootLayout","sidebarRoot","allPosts","replace","indexOf","site","width","padding","overflow","meta","content","lang","gridTemplateColumns","background"],"mappings":"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","file":"component---src-pages-blog-tsx-e536984616744a3c8151.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Card from 'antd/lib/card'\r\nimport 'antd/lib/card/style/css'\r\n\r\nexport const PostCard = ({ post }) => (\r\n  <div>\r\n    <Card\r\n      title={\r\n        <div>\r\n          <Link\r\n            to={post.fields.slug}\r\n            style={{ color: 'black', fontWeight: 'bold' }}\r\n          >\r\n            {post.frontmatter.title}\r\n          </Link>\r\n          <span\r\n            style={{\r\n              float: 'right',\r\n              color: 'grey',\r\n            }}\r\n          >\r\n            {post.frontmatter.date}\r\n          </span>\r\n        </div>\r\n      }\r\n    >\r\n      {post.excerpt}\r\n    </Card>\r\n    <br />\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { RootLayout as Layout } from '../Layout'\r\nimport { PostCard } from '../PostCard'\r\n\r\nconst BlogPage = ({\r\n  data: {\r\n    allMdx: { edges },\r\n  },\r\n}: any) => {\r\n  const posts = edges\r\n    .filter((edge: any) => !!edge.node.frontmatter.date)\r\n    .map((edge: any) => <PostCard key={edge.node.id} post={edge.node} />)\r\n  return (\r\n    <Layout>\r\n      <div>{posts}</div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPage\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    allMdx(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { root: { eq: $path } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\r\n  siteMetadata: {\r\n    title: 'Neo4j Desktop Application Documentation',\r\n  },\r\n  plugins: [\r\n    `gatsby-plugin-typescript`,\r\n    'gatsby-plugin-react-helmet',\r\n    {\r\n      resolve: `gatsby-source-filesystem`,\r\n      options: {\r\n        name: `images`,\r\n        path: `${__dirname}/src/images`,\r\n      },\r\n    },\r\n    {\r\n      resolve: `gatsby-transformer-json`,\r\n      options: {\r\n        typeName: `MenuItems`, // a fixed string\r\n      },\r\n    },\r\n    {\r\n      resolve: `gatsby-source-filesystem`,\r\n      options: {\r\n        name: `menuItems`,\r\n        path: `${__dirname}/src/menuItems`,\r\n      },\r\n    },\r\n    {\r\n      resolve: `gatsby-source-filesystem`,\r\n      options: {\r\n        name: `contents`,\r\n        path: `${__dirname}/contents`,\r\n      },\r\n    },\r\n    'gatsby-transformer-sharp',\r\n    'gatsby-plugin-sharp',\r\n    {\r\n      resolve: `gatsby-plugin-manifest`,\r\n      options: {\r\n        name: 'gatsby-starter-markdown',\r\n        short_name: 'starter',\r\n        start_url: '/',\r\n        background_color: '#663399',\r\n        theme_color: '#663399',\r\n        display: 'minimal-ui',\r\n        icon: 'src/images/gatsby-icon.png', // This path is relative to the root of the site.\r\n      },\r\n    },\r\n    {\r\n      resolve: `gatsby-mdx`,\r\n      options: {\r\n        defaultLayouts: {\r\n          default: require.resolve('./src/Layout.tsx'),\r\n        },\r\n        extensions: ['.mdx', '.md'],\r\n        remarkPlugins: [require('gatsby-transformer-remark')],\r\n        gatsbyRemarkPlugins: [\r\n          {\r\n            resolve: `gatsby-remark-autolink-headers`,\r\n            options: {\r\n              className: 'post-toc-anchor',\r\n            },\r\n          },\r\n          {\r\n            resolve: `gatsby-remark-prismjs`,\r\n            options: {\r\n              classPrefix: 'language-',\r\n              inlineCodeMarker: null,\r\n              showLineNumbers: true,\r\n              noInlineHighlight: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    `gatsby-plugin-remove-trailing-slashes`,\r\n    // this (optional) plugin enables Progressive Web App + Offline functionality\r\n    // To learn more, visit: https://gatsby.app/offline\r\n    // 'gatsby-plugin-offline',\r\n  ],\r\n  /// this must match the path your webpage is displayed from\r\n  pathPrefix: process.env.NODE_ENV === 'development' ? '/' : '/neo4j-apps',\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Menu, Row, Icon } from 'antd'\r\n\r\ninterface Props {\r\n  siteTitle: string\r\n}\r\n\r\nexport class Header extends Component<Props> {\r\n  render() {\r\n    const { siteTitle } = this.props\r\n    return (\r\n      <Row>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item>\r\n            <Link to=\"/docs/get-started/introduction/\">{siteTitle}</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <a\r\n              href=\"https://github.com/wagnerjt/neo4j-apps\"\r\n              target=\"_blank\"\r\n            >\r\n              <Icon type=\"github\" />\r\n              Contribute\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { graphql, StaticQuery, Link } from 'gatsby'\r\nimport { Affix, Menu } from 'antd'\r\nimport 'antd/lib/menu/style/css'\r\nimport { pathPrefix } from '../gatsby-config'\r\n\r\nconst SubMenu = Menu.SubMenu\r\n\r\n/**\r\n * Returns the current browser's pathname\r\n *  with the addition of the pathPrefix defiend in gatsby-config\r\n * @returns {string} Pathname\r\n */\r\nconst getPath = () => {\r\n  let key = '/' // root as default\r\n  if (typeof window !== 'undefined')\r\n    key =\r\n      pathPrefix !== '/'\r\n        ? pathPrefix + window.location.pathname\r\n        : window.location.pathname\r\n\r\n  return key\r\n}\r\n\r\nconst convertToTree = data => {\r\n  const list = data.map(edge => {\r\n    return {\r\n      path: edge.node.fields.slug,\r\n      key: edge.node.id,\r\n      title: edge.node.frontmatter.title,\r\n      parents: edge.node.frontmatter.parents,\r\n    }\r\n  })\r\n  return constructTree(list)\r\n}\r\n\r\nconst constructTree = list => {\r\n  let tree = []\r\n  let dir = []\r\n  list.forEach(item => {\r\n    if (item.parents === [] || item.parents === null) tree.push(item)\r\n    else {\r\n      let subtree = tree\r\n      for (let i = 0; i < item.parents.length; i++) {\r\n        if (\r\n          subtree.filter(\r\n            node => node.title === item.parents[i] && node.children\r\n          ).length === 0\r\n        ) {\r\n          const newNode = {\r\n            key: item.path,\r\n            title: item.parents[i],\r\n            children: [],\r\n          }\r\n          subtree.push(newNode)\r\n          dir.push(newNode)\r\n        }\r\n        subtree = subtree.find(\r\n          node => node.title === item.parents[i] && node.children\r\n        ).children\r\n      }\r\n      subtree.push(item)\r\n    }\r\n  })\r\n  return [tree, dir]\r\n}\r\n\r\nconst sortTree = tree => {\r\n  tree.sort((a, b) => {\r\n    if (\r\n      ((a.children && b.children) || (!a.children && !b.children)) &&\r\n      a.title > b.title\r\n    )\r\n      return 1\r\n    else if (a.children) return 1\r\n    return -1\r\n  })\r\n}\r\n\r\ninterface Props {\r\n  root: any\r\n}\r\n\r\nexport const SidebarContents = ({ root }: Props) => {\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query sidebarContentQuery {\r\n          allMdx(sort: { order: ASC, fields: [fields___slug] }) {\r\n            edges {\r\n              node {\r\n                fields {\r\n                  slug\r\n                }\r\n                id\r\n                frontmatter {\r\n                  title\r\n                  parents\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => {\r\n        const [tree, dir] = convertToTree(\r\n          data.allMdx.edges.filter(node =>\r\n            node.node.fields.slug.startsWith(root)\r\n          )\r\n        )\r\n        sortTree(tree)\r\n        const loop = ({ data, activePath }) =>\r\n          data.map(item => {\r\n            if (item.children) {\r\n              sortTree(item.children)\r\n              return (\r\n                <SubMenu\r\n                  key={item.key}\r\n                  title={<span style={{ fontWeight: 900 }}>{item.title}</span>}\r\n                >\r\n                  {loop({ data: item.children, activePath })}\r\n                </SubMenu>\r\n              )\r\n            }\r\n            return (\r\n              <Menu.Item key={item.path}>\r\n                <Link to={item.path}>\r\n                  <div>{item.title}</div>\r\n                </Link>\r\n              </Menu.Item>\r\n            )\r\n          })\r\n\r\n        const currentPath = getPath()\r\n        const defaultOpenKeys = dir.map(item => item.key)\r\n        return (\r\n          <Affix>\r\n            <Menu\r\n              mode=\"inline\"\r\n              style={{ minWidth: 180, height: '100%', borderRight: 0 }}\r\n              defaultOpenKeys={defaultOpenKeys}\r\n              selectedKeys={[currentPath]}\r\n            >\r\n              {loop({ data: tree, activePath: [currentPath] })}\r\n            </Menu>\r\n          </Affix>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Anchor from 'antd/lib/anchor'\r\nimport 'antd/lib/anchor/style/css'\r\n\r\nconst { Link } = Anchor\r\n\r\nconst filterAnchorDetails = anchors => {\r\n  let last_depth = 0\r\n  anchors = [].slice.call(anchors).map(anchor => {\r\n    let depth = parseInt(anchor.parentElement.nodeName[1])\r\n    if (last_depth !== 0 && depth > last_depth) depth = last_depth + 1\r\n    last_depth = depth\r\n    return {\r\n      href: '#' + anchor.parentElement.id,\r\n      title: anchor.parentElement.innerText,\r\n      depth: depth,\r\n      children: [],\r\n    }\r\n  })\r\n  constructTree(anchors)\r\n  return anchors\r\n}\r\n\r\nconst constructTree = list => {\r\n  let deleteNode = []\r\n  for (let i = 0; i < list.length; i++) {\r\n    for (let j = i + 1; j < list.length; j++) {\r\n      if (list[i].depth + 1 === list[j].depth) {\r\n        list[i].children.push(list[j])\r\n        deleteNode.push(j)\r\n      } else if (list[i].depth >= list[j].depth) break\r\n    }\r\n  }\r\n  deleteNode.sort((a, b) => b - a).forEach(index => list.splice(index, 1))\r\n}\r\n\r\nexport function TableOfContents() {\r\n  const [anchors, setAnchors] = React.useState<any[]>([])\r\n\r\n  React.useLayoutEffect(() => {\r\n    const anchors = document.getElementsByClassName('post-toc-anchor')\r\n    setAnchors(filterAnchorDetails(anchors))\r\n  }, [])\r\n\r\n  const loop = data =>\r\n    data.map(item => {\r\n      if (item.children.length > 0) {\r\n        return (\r\n          <Link href={item.href} title={item.title} key={item.href}>\r\n            {loop(item.children)}\r\n          </Link>\r\n        )\r\n      }\r\n      return <Link href={item.href} title={item.title} key={item.href} />\r\n    })\r\n  return (\r\n    <Anchor style={{ margin: '50px 50px 0px 0px' }}>{loop(anchors)}</Anchor>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport { Header } from './Header'\r\nimport { pathPrefix } from '../gatsby-config'\r\nimport { Layout } from 'antd'\r\nimport { SidebarContents } from './SidebarContents'\r\nimport { TableOfContents } from './TableOfContents'\r\nconst { Sider, Content } = Layout\r\n\r\nexport function RootLayout({ children, sidebarRoot }: any) {\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query SiteTitleQuery {\r\n          site {\r\n            siteMetadata {\r\n              title\r\n            }\r\n          }\r\n          allMdx {\r\n            edges {\r\n              node {\r\n                fields {\r\n                  slug\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => {\r\n        const allPosts = data.allMdx.edges.map(\r\n          (edge: any) => edge.node.fields.slug\r\n        )\r\n        let onPostPage\r\n        if (typeof window !== 'undefined') {\r\n          const path = window.location.pathname.replace(\r\n            pathPrefix.slice(0, -1),\r\n            ''\r\n          )\r\n          if (\r\n            allPosts.indexOf(path) >= 0 ||\r\n            allPosts.indexOf(path.slice(0, -1)) >= 0\r\n          ) {\r\n            onPostPage = true\r\n          } else {\r\n            onPostPage = false\r\n          }\r\n        }\r\n\r\n        const { title } = data.site.siteMetadata\r\n\r\n        return (\r\n          <div style={{ width: '100%', padding: 0, overflow: 'hidden' }}>\r\n            <Helmet\r\n              title={data.site.siteMetadata.title}\r\n              meta={[\r\n                { name: 'description', content: 'Sample' },\r\n                { name: 'keywords', content: 'sample, something' },\r\n              ]}\r\n            >\r\n              <html lang=\"en\" />\r\n            </Helmet>\r\n            <Header siteTitle={title} />\r\n\r\n            <div\r\n              style={{\r\n                display: 'grid',\r\n                gridTemplateColumns: 'auto 1fr auto',\r\n                height: '100%',\r\n              }}\r\n            >\r\n              <SidebarContents root={sidebarRoot} />\r\n              <Layout>\r\n                <Content\r\n                  style={{\r\n                    background: '#fff',\r\n                    padding: 24,\r\n                    margin: 0,\r\n                  }}\r\n                >\r\n                  {children}\r\n                </Content>\r\n              </Layout>\r\n              <TableOfContents />\r\n            </div>\r\n            <Layout>\r\n              <Sider\r\n                width={200}\r\n                style={{ background: '#fff', height: '100%' }}\r\n              />\r\n            </Layout>\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RootLayout\r\n"],"sourceRoot":""}