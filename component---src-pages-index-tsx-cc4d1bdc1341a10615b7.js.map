{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["IndexPage","align","style","padding","color","fontSize","fontWeight","href","Group","size","target","type","to","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json","shape"],"mappings":"0FAAA,oDAwCeA,UApCG,WAChB,OACE,yBAAKC,MAAM,SAASC,MAAO,CAAEC,QAAS,KACpC,uBACED,MAAO,CACLE,MAAO,iBACPC,SAAU,GACVC,WAAY,SAJhB,sCASA,iFACA,+CACoB,IAClB,uBAAGC,KAAK,qDAAR,sDAIF,6BACA,kBAAC,IAAOC,MAAR,CAAcC,KAAK,SACjB,kBAAC,IAAD,CACEF,KAAK,yCACLG,OAAO,UAFT,aAKE,kBAAC,IAAD,CAAMC,KAAK,YAEb,kBAAC,IAAD,CAAQA,KAAK,WACX,kBAAC,IAAD,CAAMC,GAAG,kCAAT,oB,iCCjCV,kIAYMC,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvB,kBAACJ,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvD,yDA4BfJ,EAAYQ,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,O,oBCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,6WCM/C,IAAMK,EAAmB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO1B,IAAM2B,cAAcC,I,6UAApB,EACLN,WACAC,iBACGA,EAAcM,QAIrBR,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUmB,MAAM,CACxBJ,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO","file":"component---src-pages-index-tsx-cc4d1bdc1341a10615b7.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Button, Icon } from 'antd'\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <div align=\"center\" style={{ padding: 80 }}>\r\n      <p\r\n        style={{\r\n          color: 'cornflowerblue',\r\n          fontSize: 50,\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        Gatsby Ant Design Docs Boilerplate\r\n      </p>\r\n      <h2>A gatsby starter to create documentation websites</h2>\r\n      <p>\r\n        This is a fork of{' '}\r\n        <a href=\"https://github.com/jannikbuschke/gatsby-antd-docs\">\r\n          https://github.com/jannikbuschke/gatsby-antd-docs\r\n        </a>\r\n      </p>\r\n      <br />\r\n      <Button.Group size=\"large\">\r\n        <Button\r\n          href=\"https://github.com/wagnerjt/neo4j-apps\"\r\n          target=\"_blank\"\r\n        >\r\n          Contribute\r\n          <Icon type=\"github\" />\r\n        </Button>\r\n        <Button type=\"primary\">\r\n          <Link to=\"/docs/get-started/introduction\">Get Started</Link>\r\n        </Button>\r\n      </Button.Group>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}